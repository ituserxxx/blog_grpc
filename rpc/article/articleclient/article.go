// Code generated by goctl. DO NOT EDIT.
// Source: article.proto

package articleclient

import (
	"context"

	"brl/rpc/article/article"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = article.Request
	Response = article.Response

	Article interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultArticle struct {
		cli zrpc.Client
	}
)

func NewArticle(cli zrpc.Client) Article {
	return &defaultArticle{
		cli: cli,
	}
}

func (m *defaultArticle) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
