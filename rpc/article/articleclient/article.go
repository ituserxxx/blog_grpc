// Code generated by goctl. DO NOT EDIT.
// Source: article.proto

package articleclient

import (
	"context"

	"brl/rpc/article/article"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ListItem = article.ListItem
	ListReq  = article.ListReq
	ListResp = article.ListResp

	Article interface {
		List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
	}

	defaultArticle struct {
		cli zrpc.Client
	}
)

func NewArticle(cli zrpc.Client) Article {
	return &defaultArticle{
		cli: cli,
	}
}

func (m *defaultArticle) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := article.NewArticleClient(m.cli.Conn())
	return client.List(ctx, in, opts...)
}
