// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"brl/rpc/user/internal/logic"
	"brl/rpc/user/internal/svc"
	"brl/rpc/user/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Ping(ctx context.Context, in *user.Request) (*user.Response, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *UserServer) AddUser(ctx context.Context, in *user.AddUserReq) (*user.AddUserResp, error) {
	l := logic.NewAddUserLogic(ctx, s.svcCtx)
	return l.AddUser(in)
}

func (s *UserServer) UserLogin(ctx context.Context, in *user.UserLoginReq) (*user.UserLoginResp, error) {
	l := logic.NewUserLoginLogic(ctx, s.svcCtx)
	return l.UserLogin(in)
}

func (s *UserServer) UserUpdateNickName(ctx context.Context, in *user.UserUpdateNickNameReq) (*user.EmptyResp, error) {
	l := logic.NewUserUpdateNickNameLogic(ctx, s.svcCtx)
	return l.UserUpdateNickName(in)
}

func (s *UserServer) UserDel(ctx context.Context, in *user.UserDelReq) (*user.EmptyResp, error) {
	l := logic.NewUserDelLogic(ctx, s.svcCtx)
	return l.UserDel(in)
}
