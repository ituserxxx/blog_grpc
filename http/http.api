syntax = "v1"

// goctl api go -api=http.api -dir=./
type Request {
	Name string `path:"name,options=you|me"`
}

type Response {
	Message string `json:"message"`
}

type (
	// 定义登录接口的请求体
	LoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}
	// 定义登录接口的响应体
	LoginResp {
		Id           int64  `json:"id"`
		Username     string `json:"username"`
		AccessToken  string `json:"token"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}

	AddUserReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}
	AddUserResp {
		Id int64 `json:"id"`
	}
	UserUpdateNickNameReq {
		Id       int64  `json:"id"`
		Nickname string `json:"nickname"`
	}
	UserUpdateNickNameResp {
		Code string `json:"code"`
		Msg  string `json:"msg"`
	}

	DelUserReq {
		Id int64 `json:"id"`
	}
	DelUserResp {
		Code string `json:"code"`
		Msg  string `json:"msg"`
	}

	GetUserInfoReq {
		Id int64 `json:"id"`
	}
	GetUserInfoResp {
		Id       int64  `json:"id"`
		Username string `json:"username"`
	}
	UserListReq {
	}
	UserListItem {
		Id       int64  `json:"id"`
		Username string `json:"username"`
		Nickname string `json:"nickname"`
	}
	UserListResp {
		Total int64           `json:"total"`
		List  []*UserListItem `json:"list"`
	}
)

// goctl api go -api=http.api -dir=./

@server(
	jwt: JwtAuth
	group: user
	prefix: /api/user
)
service http-api {
	@handler HttpHandler
	get /from/:name(Request) returns (Response)
	
	@handler AddUser
	post /add(AddUserReq) returns (AddUserResp)
	
	@handler DelUser
	post /del(DelUserReq) returns (DelUserResp)
	
	@handler UserUpdateNickName
	post /UpdateNickName(UserUpdateNickNameReq) returns (UserUpdateNickNameResp)
	
	@handler GetUserInfo
	post /info(GetUserInfoReq)returns(GetUserInfoResp)
	
	@handler GetUserList
	post /list(UserListReq)returns(UserListResp)
}

@server(
	group: user
	prefix: /api/user
)
service http-api {
	@handler UserLogin
	post /login(LoginReq) returns (LoginResp)
}